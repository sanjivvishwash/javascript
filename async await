  async msg() {    
    return new Promise(resolve => {
        resolve('yyyy');
    });
   
  }
  async ngOnInit() {
    let x= await this.msg();
    console.log(x);    
    console.log('y');    
  }
  =============================================
  async function msg() {
  const [a, b, c] = await Promise.all([who(), what(), where()]);

  console.log(`${ a } ${ b } ${ c }`);
}

msg();
================================================
async function hello() {
  return 'Hello Alligator!';
}

const b = hello();

b.then(x => console.log(x)); // Hello Alligator!
â€¦or just this:

async function hello() {
  return 'Hello Alligator!';
}

hello().then(x => console.log(x)); // Hello Alligator!
=====================================================
const msg = async () => {
  const msg = await scaryClown();
  console.log('Message:', msg);
}
========================================
function yayOrNay() {
  return new Promise((resolve, reject) => {
    const val = Math.round(Math.random() * 1); // 0 or 1, at random

    val ? resolve('Lucky!!') : reject('Nope ');
  });
}

async function msg() {
  try {
    const msg = await yayOrNay();
    console.log(msg);
  } catch(err) {
    console.log(err);
  }
}

msg(); // Lucky!!
msg(); // Lucky!!
msg(); // Lucky!!
msg(); // Nope 
msg(); // Lucky!!
msg(); // Nope 
msg(); // Nope 
msg(); // Nope 
msg(); // Nope 
msg(); // Lucky!!
